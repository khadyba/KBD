{
    "sourceFile": "src/app/blog/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 43,
            "patches": [
                {
                    "date": 1728655223487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728656681087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,31 @@\n-\"use client\"; \n-\n import { useState, useEffect } from \"react\";\n-import { Article } from \"../types\";\n \n-\n export default function BlogPage() {\n-    const [articles, setArticles] = useState<Article[]>([]); \n+  const [articles, setArticles] = useState([]);\n \n+  const fetchArticles = async () => {\n+    try {\n+      const response = await fetch('/api/blog');\n+      const data = await response.json();\n+      setArticles(data);\n+    } catch (error) {\n+      console.error('Erreur lors de la récupération des articles:', error);\n+    }\n+  };\n \n-    const fetchArticles = async () => {\n-        try {\n-            const response = await fetch('http://127.0.0.1:3000/api/blog');\n-            if (!response.ok) {\n-                throw new Error(`HTTP error! Status: ${response.status}`);\n-            }\n-            const data = await response.json();\n-            console.log( data); \n-            setArticles(data);\n-        } catch (error) {\n-            console.error('Erreur lors de la récupération des articles:', error);\n-        }\n-    };\n-    \n-    \n-    useEffect(() => {\n-        fetchArticles();\n-    }, [])\n+  useEffect(() => {\n+    fetchArticles();\n+  }, []);\n \n-\n-    return (\n-        <>\n-            <h1>Liste des articles</h1>\n-            {/* Affichez la liste des articles */}\n-            {articles.map((article) => (\n-                <div key={article.id} style={{ padding: '1rem' }}>\n-                    <h2>{article.title} </h2>\n-                </div>\n-            ))}\n-        </>\n-    );\n+  return (\n+    <>\n+      <h1>Liste des articles</h1>\n+      {articles.map((article) => (\n+        <div key={article.id}>\n+          <h2>{article.title}</h2>\n+          <p>Par {article.author} le {article.date}</p>\n+        </div>\n+      ))}\n+    </>\n+  );\n }\n"
                },
                {
                    "date": 1728656688564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,42 @@\n+\"use client\"; \n+\n import { useState, useEffect } from \"react\";\n+import { Article } from \"../types\";\n \n+\n export default function BlogPage() {\n-  const [articles, setArticles] = useState([]);\n+    const [articles, setArticles] = useState<Article[]>([]); \n \n-  const fetchArticles = async () => {\n-    try {\n-      const response = await fetch('/api/blog');\n-      const data = await response.json();\n-      setArticles(data);\n-    } catch (error) {\n-      console.error('Erreur lors de la récupération des articles:', error);\n-    }\n-  };\n \n-  useEffect(() => {\n-    fetchArticles();\n-  }, []);\n+    const fetchArticles = async () => {\n+        try {\n+            const response = await fetch('http://127.0.0.1:3000/api/blog');\n+            if (!response.ok) {\n+                throw new Error(`HTTP error! Status: ${response.status}`);\n+            }\n+            const data = await response.json();\n+            console.log( data); \n+            setArticles(data);\n+        } catch (error) {\n+            console.error('Erreur lors de la récupération des articles:', error);\n+        }\n+    };\n+    \n+    \n+    useEffect(() => {\n+        fetchArticles();\n+    }, [])\n \n-  return (\n-    <>\n-      <h1>Liste des articles</h1>\n-      {articles.map((article) => (\n-        <div key={article.id}>\n-          <h2>{article.title}</h2>\n-          <p>Par {article.author} le {article.date}</p>\n-        </div>\n-      ))}\n-    </>\n-  );\n+\n+    return (\n+        <>\n+            <h1>Liste des articles</h1>\n+            {/* Affichez la liste des articles */}\n+            {articles.map((article) => (\n+                <div key={article.id} style={{ padding: '1rem' }}>\n+                    <h2>{article.title} </h2>\n+                </div>\n+            ))}\n+        </>\n+    );\n }\n"
                },
                {
                    "date": 1728656814653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \n \n     const fetchArticles = async () => {\n         try {\n-            const response = await fetch('http://127.0.0.1:3000/api/blog');\n+            const response = await fetch('/api/blog');\n             if (!response.ok) {\n                 throw new Error(`HTTP error! Status: ${response.status}`);\n             }\n             const data = await response.json();\n"
                },
                {
                    "date": 1728656835589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,42 @@\n-\"use client\"; \n+// \"use client\"; \n \n-import { useState, useEffect } from \"react\";\n-import { Article } from \"../types\";\n+// import { useState, useEffect } from \"react\";\n+// import { Article } from \"../types\";\n \n \n-export default function BlogPage() {\n-    const [articles, setArticles] = useState<Article[]>([]); \n+// export default function BlogPage() {\n+//     const [articles, setArticles] = useState<Article[]>([]); \n \n \n-    const fetchArticles = async () => {\n-        try {\n-            const response = await fetch('/api/blog');\n-            if (!response.ok) {\n-                throw new Error(`HTTP error! Status: ${response.status}`);\n-            }\n-            const data = await response.json();\n-            console.log( data); \n-            setArticles(data);\n-        } catch (error) {\n-            console.error('Erreur lors de la récupération des articles:', error);\n-        }\n-    };\n+//     const fetchArticles = async () => {\n+//         try {\n+//             const response = await fetch('/api/blog');\n+//             if (!response.ok) {\n+//                 throw new Error(`HTTP error! Status: ${response.status}`);\n+//             }\n+//             const data = await response.json();\n+//             console.log( data); \n+//             setArticles(data);\n+//         } catch (error) {\n+//             console.error('Erreur lors de la récupération des articles:', error);\n+//         }\n+//     };\n     \n     \n-    useEffect(() => {\n-        fetchArticles();\n-    }, [])\n+//     useEffect(() => {\n+//         fetchArticles();\n+//     }, [])\n \n \n-    return (\n-        <>\n-            <h1>Liste des articles</h1>\n-            {/* Affichez la liste des articles */}\n-            {articles.map((article) => (\n-                <div key={article.id} style={{ padding: '1rem' }}>\n-                    <h2>{article.title} </h2>\n-                </div>\n-            ))}\n-        </>\n-    );\n-}\n+//     return (\n+//         <>\n+//             <h1>Liste des articles</h1>\n+//             {/* Affichez la liste des articles */}\n+//             {articles.map((article) => (\n+//                 <div key={article.id} style={{ padding: '1rem' }}>\n+//                     <h2>{article.title} </h2>\n+//                 </div>\n+//             ))}\n+//         </>\n+//     );\n+// }\n"
                },
                {
                    "date": 1728656853931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,4 +39,37 @@\n //             ))}\n //         </>\n //     );\n // }\n+\n+\n+import { useState, useEffect } from \"react\";\n+\n+export default function BlogPage() {\n+  const [articles, setArticles] = useState([]);\n+\n+  const fetchArticles = async () => {\n+    try {\n+      const response = await fetch('/api/blog');\n+      const data = await response.json();\n+      setArticles(data);\n+    } catch (error) {\n+      console.error('Erreur lors de la récupération des articles:', error);\n+    }\n+  };\n+\n+  useEffect(() => {\n+    fetchArticles();\n+  }, []);\n+\n+  return (\n+    <>\n+      <h1>Liste des articles</h1>\n+      {articles.map((article) => (\n+        <div key={article.id}>\n+          <h2>{article.title}</h2>\n+          <p>Par {article.author} le {article.date}</p>\n+        </div>\n+      ))}\n+    </>\n+  );\n+}\n"
                },
                {
                    "date": 1728656871011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n \n import { useState, useEffect } from \"react\";\n \n export default function BlogPage() {\n-  const [articles, setArticles] = useState([]);\n+  const [articles, setArticles] = useState<Article[]>([])\n \n   const fetchArticles = async () => {\n     try {\n       const response = await fetch('/api/blog');\n"
                },
                {
                    "date": 1728656885715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n // }\n \n \n import { useState, useEffect } from \"react\";\n-\n+// import { Article } from \"../types\";\n export default function BlogPage() {\n   const [articles, setArticles] = useState<Article[]>([])\n \n   const fetchArticles = async () => {\n"
                },
                {
                    "date": 1728656920005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,11 +40,11 @@\n //         </>\n //     );\n // }\n \n-\n+\"use client\"\n import { useState, useEffect } from \"react\";\n-// import { Article } from \"../types\";\n+import { Article } from \"../types\";\n export default function BlogPage() {\n   const [articles, setArticles] = useState<Article[]>([])\n \n   const fetchArticles = async () => {\n"
                },
                {
                    "date": 1728658835316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,8 +66,10 @@\n       <h1>Liste des articles</h1>\n       {articles.map((article) => (\n         <div key={article.id}>\n           <h2>{article.title}</h2>\n+          <h2>{article.title}</h2>\n+\n           <p>Par {article.author} le {article.date}</p>\n         </div>\n       ))}\n     </>\n"
                },
                {
                    "date": 1728658842564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,10 +66,9 @@\n       <h1>Liste des articles</h1>\n       {articles.map((article) => (\n         <div key={article.id}>\n           <h2>{article.title}</h2>\n-          <h2>{article.title}</h2>\n-\n+          <h2>{article.description}</h2>\n           <p>Par {article.author} le {article.date}</p>\n         </div>\n       ))}\n     </>\n"
                },
                {
                    "date": 1728723787979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,47 +1,6 @@\n-// \"use client\"; \n \n-// import { useState, useEffect } from \"react\";\n-// import { Article } from \"../types\";\n \n-\n-// export default function BlogPage() {\n-//     const [articles, setArticles] = useState<Article[]>([]); \n-\n-\n-//     const fetchArticles = async () => {\n-//         try {\n-//             const response = await fetch('/api/blog');\n-//             if (!response.ok) {\n-//                 throw new Error(`HTTP error! Status: ${response.status}`);\n-//             }\n-//             const data = await response.json();\n-//             console.log( data); \n-//             setArticles(data);\n-//         } catch (error) {\n-//             console.error('Erreur lors de la récupération des articles:', error);\n-//         }\n-//     };\n-    \n-    \n-//     useEffect(() => {\n-//         fetchArticles();\n-//     }, [])\n-\n-\n-//     return (\n-//         <>\n-//             <h1>Liste des articles</h1>\n-//             {/* Affichez la liste des articles */}\n-//             {articles.map((article) => (\n-//                 <div key={article.id} style={{ padding: '1rem' }}>\n-//                     <h2>{article.title} </h2>\n-//                 </div>\n-//             ))}\n-//         </>\n-//     );\n-// }\n-\n \"use client\"\n import { useState, useEffect } from \"react\";\n import { Article } from \"../types\";\n export default function BlogPage() {\n"
                },
                {
                    "date": 1728723950646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,24 @@\n-\n-\n-\"use client\"\n+\"use client\";\n import { useState, useEffect } from \"react\";\n import { Article } from \"../types\";\n+\n export default function BlogPage() {\n-  const [articles, setArticles] = useState<Article[]>([])\n+  const [articles, setArticles] = useState<Article[]>([]);\n+  const [error, setError] = useState<string | null>(null); // State to handle error\n \n   const fetchArticles = async () => {\n     try {\n       const response = await fetch('/api/blog');\n+      if (!response.ok) {\n+        throw new Error('Échec de la récupération des articles');\n+      }\n       const data = await response.json();\n       setArticles(data);\n-    } catch (error) {\n+      setError(null); // Clear any previous errors\n+    } catch (error: any) {\n       console.error('Erreur lors de la récupération des articles:', error);\n+      setError('Erreur lors de la récupération des articles');\n     }\n   };\n \n   useEffect(() => {\n@@ -22,14 +27,22 @@\n \n   return (\n     <>\n       <h1>Liste des articles</h1>\n-      {articles.map((article) => (\n-        <div key={article.id}>\n-          <h2>{article.title}</h2>\n-          <h2>{article.description}</h2>\n-          <p>Par {article.author} le {article.date}</p>\n-        </div>\n-      ))}\n+\n+      {/* Affichage de l'erreur s'il y en a une */}\n+      {error && <p style={{ color: 'red' }}>{error}</p>}\n+\n+      {articles.length === 0 && !error ? (\n+        <p>Aucun article disponible.</p>\n+      ) : (\n+        articles.map((article) => (\n+          <div key={article.id}>\n+            <h2>{article.title}</h2>\n+            <h3>{article.description}</h3>\n+            <p>Par {article.author} le {new Date(article.date).toLocaleDateString()}</p>\n+          </div>\n+        ))\n+      )}\n     </>\n   );\n }\n"
                },
                {
                    "date": 1728723957771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { Article } from \"../types\";\n \n export default function BlogPage() {\n   const [articles, setArticles] = useState<Article[]>([]);\n-  const [error, setError] = useState<string | null>(null); // State to handle error\n+  const [error, setError] = useState<string | null>(null); \n \n   const fetchArticles = async () => {\n     try {\n       const response = await fetch('/api/blog');\n"
                },
                {
                    "date": 1728723967807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         throw new Error('Échec de la récupération des articles');\n       }\n       const data = await response.json();\n       setArticles(data);\n-      setError(null); // Clear any previous errors\n+      setError(null); \n     } catch (error: any) {\n       console.error('Erreur lors de la récupération des articles:', error);\n       setError('Erreur lors de la récupération des articles');\n     }\n"
                },
                {
                    "date": 1728724672736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { Article } from \"../types\";\n \n export default function BlogPage() {\n   const [articles, setArticles] = useState<Article[]>([]);\n-  const [error, setError] = useState<string | null>(null); \n+  const [error, setError] = useState<string | null>(null); // State to handle error\n \n   const fetchArticles = async () => {\n     try {\n       const response = await fetch('/api/blog');\n@@ -13,12 +13,17 @@\n         throw new Error('Échec de la récupération des articles');\n       }\n       const data = await response.json();\n       setArticles(data);\n-      setError(null); \n-    } catch (error: any) {\n-      console.error('Erreur lors de la récupération des articles:', error);\n-      setError('Erreur lors de la récupération des articles');\n+      setError(null); // Clear any previous errors\n+    } catch (error: unknown) {\n+      if (error instanceof Error) {\n+        console.error('Erreur lors de la récupération des articles:', error.message);\n+        setError('Erreur lors de la récupération des articles');\n+      } else {\n+        console.error('Erreur inconnue:', error);\n+        setError('Erreur inconnue');\n+      }\n     }\n   };\n \n   useEffect(() => {\n"
                },
                {
                    "date": 1728724712901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         throw new Error('Échec de la récupération des articles');\n       }\n       const data = await response.json();\n       setArticles(data);\n-      setError(null); // Clear any previous errors\n+      setError(null); \n     } catch (error: unknown) {\n       if (error instanceof Error) {\n         console.error('Erreur lors de la récupération des articles:', error.message);\n         setError('Erreur lors de la récupération des articles');\n"
                },
                {
                    "date": 1728726234859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { Article } from \"../types\";\n \n export default function BlogPage() {\n   const [articles, setArticles] = useState<Article[]>([]);\n-  const [error, setError] = useState<string | null>(null); // State to handle error\n+  const [error, setError] = useState<string | null>(null); \n \n   const fetchArticles = async () => {\n     try {\n       const response = await fetch('/api/blog');\n@@ -43,9 +43,9 @@\n         articles.map((article) => (\n           <div key={article.id}>\n             <h2>{article.title}</h2>\n             <h3>{article.description}</h3>\n-            <p>Par {article.author} le {new Date(article.date).toLocaleDateString()}</p>\n+            <p>Par {article.author} le {article.createdAt.toLocaleDateString()}.toLocaleDateString()}</p>\n           </div>\n         ))\n       )}\n     </>\n"
                },
                {
                    "date": 1728726241671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n         articles.map((article) => (\n           <div key={article.id}>\n             <h2>{article.title}</h2>\n             <h3>{article.description}</h3>\n-            <p>Par {article.author} le {article.createdAt.toLocaleDateString()}.toLocaleDateString()}</p>\n+            <p>Par {article.author} le {new Date(article.date).toLocaleDateString()}</p>\n           </div>\n         ))\n       )}\n     </>\n"
                },
                {
                    "date": 1728726248949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n         articles.map((article) => (\n           <div key={article.id}>\n             <h2>{article.title}</h2>\n             <h3>{article.description}</h3>\n-            <p>Par {article.author} le {new Date(article.date).toLocaleDateString()}</p>\n+            <p>Par {article.author} le {article.createdAt.toLocaleDateString()}</p>\n           </div>\n         ))\n       )}\n     </>\n"
                },
                {
                    "date": 1728726610256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n       <h1>Liste des articles</h1>\n \n       {/* Affichage de l'erreur s'il y en a une */}\n       {error && <p style={{ color: 'red' }}>{error}</p>}\n+      \n \n       {articles.length === 0 && !error ? (\n         <p>Aucun article disponible.</p>\n       ) : (\n"
                },
                {
                    "date": 1728726622309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,10 @@\n       <h1>Liste des articles</h1>\n \n       {/* Affichage de l'erreur s'il y en a une */}\n       {error && <p style={{ color: 'red' }}>{error}</p>}\n-      \n \n+\n       {articles.length === 0 && !error ? (\n         <p>Aucun article disponible.</p>\n       ) : (\n         articles.map((article) => (\n"
                },
                {
                    "date": 1728726676291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,27 +3,18 @@\n import { Article } from \"../types\";\n \n export default function BlogPage() {\n   const [articles, setArticles] = useState<Article[]>([]);\n-  const [error, setError] = useState<string | null>(null); \n+  const [error, setError] = useState<string | null>(null);  // Pour afficher une erreur si besoin\n \n   const fetchArticles = async () => {\n     try {\n       const response = await fetch('/api/blog');\n-      if (!response.ok) {\n-        throw new Error('Échec de la récupération des articles');\n-      }\n       const data = await response.json();\n       setArticles(data);\n-      setError(null); \n-    } catch (error: unknown) {\n-      if (error instanceof Error) {\n-        console.error('Erreur lors de la récupération des articles:', error.message);\n-        setError('Erreur lors de la récupération des articles');\n-      } else {\n-        console.error('Erreur inconnue:', error);\n-        setError('Erreur inconnue');\n-      }\n+    } catch (error) {\n+      setError('Erreur lors de la récupération des articles');\n+      console.error('Erreur lors de la récupération des articles:', error);\n     }\n   };\n \n   useEffect(() => {\n@@ -36,19 +27,24 @@\n \n       {/* Affichage de l'erreur s'il y en a une */}\n       {error && <p style={{ color: 'red' }}>{error}</p>}\n \n-\n       {articles.length === 0 && !error ? (\n         <p>Aucun article disponible.</p>\n       ) : (\n-        articles.map((article) => (\n-          <div key={article.id}>\n-            <h2>{article.title}</h2>\n-            <h3>{article.description}</h3>\n-            <p>Par {article.author} le {article.createdAt.toLocaleDateString()}</p>\n-          </div>\n-        ))\n+        articles.map((article) => {\n+          // Convertir `createdAt` en Date si c'est une chaîne ISO\n+          const articleDate = typeof article.createdAt === 'string' ? new Date(article.createdAt) : article.createdAt;\n+          \n+          return (\n+            <div key={article.id}>\n+              <h2>{article.title}</h2>\n+              <h3>{article.description}</h3>\n+              <p>Par {article.author} le {articleDate.toLocaleDateString()}</p>\n+            </div>\n+          );\n+        })\n       )}\n     </>\n   );\n }\n+\n"
                },
                {
                    "date": 1728726698259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   }, []);\n \n   return (\n     <>\n-      <h1>Liste des articles</h1>\n+      <h1 cla>Liste des articles</h1>\n \n       {/* Affichage de l'erreur s'il y en a une */}\n       {error && <p style={{ color: 'red' }}>{error}</p>}\n \n"
                },
                {
                    "date": 1728726705487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   }, []);\n \n   return (\n     <>\n-      <h1 cla>Liste des articles</h1>\n+      <h1 className=\"text-2XLs\">Liste des articles</h1>\n \n       {/* Affichage de l'erreur s'il y en a une */}\n       {error && <p style={{ color: 'red' }}>{error}</p>}\n \n"
                },
                {
                    "date": 1728726731863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   }, []);\n \n   return (\n     <>\n-      <h1 className=\"text-2XLs\">Liste des articles</h1>\n+      <h1 className=\"text-2xl\">Liste des articles</h1>\n \n       {/* Affichage de l'erreur s'il y en a une */}\n       {error && <p style={{ color: 'red' }}>{error}</p>}\n \n@@ -36,9 +36,9 @@\n           const articleDate = typeof article.createdAt === 'string' ? new Date(article.createdAt) : article.createdAt;\n           \n           return (\n             <div key={article.id}>\n-              <h2>{article.title}</h2>\n+              <h2>Titre: {article.title}</h2>\n               <h3>{article.description}</h3>\n               <p>Par {article.author} le {articleDate.toLocaleDateString()}</p>\n             </div>\n           );\n"
                },
                {
                    "date": 1728726741122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n           \n           return (\n             <div key={article.id}>\n               <h2>Titre: {article.title}</h2>\n-              <h3>{article.description}</h3>\n+              <h3>Descriptions{article.description}</h3>\n               <p>Par {article.author} le {articleDate.toLocaleDateString()}</p>\n             </div>\n           );\n         })\n"
                },
                {
                    "date": 1728726754421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,10 @@\n           const articleDate = typeof article.createdAt === 'string' ? new Date(article.createdAt) : article.createdAt;\n           \n           return (\n             <div key={article.id}>\n-              <h2>Titre: {article.title}</h2>\n-              <h3>Descriptions{article.description}</h3>\n+              <h2 className=\"\">Titre: {article.title}</h2>\n+              <h3>Descriptions: {article.description}</h3>\n               <p>Par {article.author} le {articleDate.toLocaleDateString()}</p>\n             </div>\n           );\n         })\n"
                },
                {
                    "date": 1728726763134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n           const articleDate = typeof article.createdAt === 'string' ? new Date(article.createdAt) : article.createdAt;\n           \n           return (\n             <div key={article.id}>\n-              <h2 className=\"\">Titre: {article.title}</h2>\n+              <h className=\"text-bo\">Titre: {article.title}</h2>\n               <h3>Descriptions: {article.description}</h3>\n               <p>Par {article.author} le {articleDate.toLocaleDateString()}</p>\n             </div>\n           );\n"
                },
                {
                    "date": 1728726912677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,12 +35,14 @@\n           // Convertir `createdAt` en Date si c'est une chaîne ISO\n           const articleDate = typeof article.createdAt === 'string' ? new Date(article.createdAt) : article.createdAt;\n           \n           return (\n-            <div key={article.id}>\n-              <h className=\"text-bo\">Titre: {article.title}</h2>\n-              <h3>Descriptions: {article.description}</h3>\n-              <p>Par {article.author} le {articleDate.toLocaleDateString()}</p>\n+            <div key={article.id} className=\"mb-4 p-4 border border-gray-300 rounded-lg\">\n+              <h2 className=\"text-xl font-bold\">Titre: {article.title}</h2>\n+              <p className=\"text-sm text-gray-500\">Publié le: {articleDate.toLocaleDateString()}</p>\n+              <a href={`/blog/${article.id}`} className=\"mt-2 inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700\">\n+                Voir Détail\n+              </a>\n             </div>\n           );\n         })\n       )}\n"
                },
                {
                    "date": 1728727249083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,15 +31,20 @@\n       {articles.length === 0 && !error ? (\n         <p>Aucun article disponible.</p>\n       ) : (\n         articles.map((article) => {\n-          // Convertir `createdAt` en Date si c'est une chaîne ISO\n           const articleDate = typeof article.createdAt === 'string' ? new Date(article.createdAt) : article.createdAt;\n-          \n+\n           return (\n             <div key={article.id} className=\"mb-4 p-4 border border-gray-300 rounded-lg\">\n               <h2 className=\"text-xl font-bold\">Titre: {article.title}</h2>\n               <p className=\"text-sm text-gray-500\">Publié le: {articleDate.toLocaleDateString()}</p>\n+\n+              {/* Affichage de l'image si elle existe */}\n+              {article.image && (\n+                <img src={article.image} alt={article.title} className=\"mt-2 mb-4 w-full h-auto rounded-lg\" />\n+              )}\n+\n               <a href={`/blog/${article.id}`} className=\"mt-2 inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700\">\n                 Voir Détail\n               </a>\n             </div>\n"
                },
                {
                    "date": 1728727298619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n               <p className=\"text-sm text-gray-500\">Publié le: {articleDate.toLocaleDateString()}</p>\n \n               {/* Affichage de l'image si elle existe */}\n               {article.image && (\n-                <img src={article.image} alt={article.title} className=\"mt-2 mb-4 w-full h-auto rounded-lg\" />\n+                <I src={article.image} alt={article.title} className=\"mt-2 mb-4 w-full h-auto rounded-lg\" />\n               )}\n \n               <a href={`/blog/${article.id}`} className=\"mt-2 inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700\">\n                 Voir Détail\n"
                },
                {
                    "date": 1728727306252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n               <p className=\"text-sm text-gray-500\">Publié le: {articleDate.toLocaleDateString()}</p>\n \n               {/* Affichage de l'image si elle existe */}\n               {article.image && (\n-                <I src={article.image} alt={article.title} className=\"mt-2 mb-4 w-full h-auto rounded-lg\" />\n+                <Image src={article.image} w alt={article.title} className=\"mt-2 mb-4 w-full h-auto rounded-lg\" />\n               )}\n \n               <a href={`/blog/${article.id}`} className=\"mt-2 inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700\">\n                 Voir Détail\n"
                },
                {
                    "date": 1728727313405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n               <p className=\"text-sm text-gray-500\">Publié le: {articleDate.toLocaleDateString()}</p>\n \n               {/* Affichage de l'image si elle existe */}\n               {article.image && (\n-                <Image src={article.image} w alt={article.title} className=\"mt-2 mb-4 w-full h-auto rounded-lg\" />\n+                <Image src={article.image} widht= alt={article.title} className=\"mt-2 mb-4 w-full h-auto rounded-lg\" />\n               )}\n \n               <a href={`/blog/${article.id}`} className=\"mt-2 inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700\">\n                 Voir Détail\n"
                },
                {
                    "date": 1728727318899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n               <p className=\"text-sm text-gray-500\">Publié le: {articleDate.toLocaleDateString()}</p>\n \n               {/* Affichage de l'image si elle existe */}\n               {article.image && (\n-                <Image src={article.image} widht= alt={article.title} className=\"mt-2 mb-4 w-full h-auto rounded-lg\" />\n+                <Image src={article.image} widht={250} alt={article.title} className=\"mt-2 mb-4 w-full h-auto rounded-lg\" />\n               )}\n \n               <a href={`/blog/${article.id}`} className=\"mt-2 inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700\">\n                 Voir Détail\n"
                },
                {
                    "date": 1728727330261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n               <p className=\"text-sm text-gray-500\">Publié le: {articleDate.toLocaleDateString()}</p>\n \n               {/* Affichage de l'image si elle existe */}\n               {article.image && (\n-                <Image src={article.image} widht={250} alt={article.title} className=\"mt-2 mb-4 w-full h-auto rounded-lg\" />\n+                <Image src={article.image} alt={article.title} className=\"mt-2 mb-4 w-full h-auto rounded-lg\" />\n               )}\n \n               <a href={`/blog/${article.id}`} className=\"mt-2 inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700\">\n                 Voir Détail\n"
                },
                {
                    "date": 1728727337149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n               <p className=\"text-sm text-gray-500\">Publié le: {articleDate.toLocaleDateString()}</p>\n \n               {/* Affichage de l'image si elle existe */}\n               {article.image && (\n-                <Image src={article.image} alt={article.title} className=\"mt-2 mb-4 w-full h-auto rounded-lg\" />\n+                <ima src={article.image} alt={article.title} className=\"mt-2 mb-4 w-full h-auto rounded-lg\" />\n               )}\n \n               <a href={`/blog/${article.id}`} className=\"mt-2 inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700\">\n                 Voir Détail\n"
                },
                {
                    "date": 1728727417566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,11 +38,18 @@\n             <div key={article.id} className=\"mb-4 p-4 border border-gray-300 rounded-lg\">\n               <h2 className=\"text-xl font-bold\">Titre: {article.title}</h2>\n               <p className=\"text-sm text-gray-500\">Publié le: {articleDate.toLocaleDateString()}</p>\n \n-              {/* Affichage de l'image si elle existe */}\n+              {/* Utilisation du composant Image pour optimiser l'image */}\n               {article.image && (\n-                <ima src={article.image} alt={article.title} className=\"mt-2 mb-4 w-full h-auto rounded-lg\" />\n+                <Image \n+                  src={article.image} \n+                  alt={article.title} \n+                  width={600}  // Largeur fixe ou dynamique selon ton besoin\n+                  height={400} // Hauteur fixe ou dynamique\n+                  className=\"mt-2 mb-4 rounded-lg\"\n+                  loading=\"lazy\"  // Chargement différé\n+                />\n               )}\n \n               <a href={`/blog/${article.id}`} className=\"mt-2 inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700\">\n                 Voir Détail\n"
                },
                {
                    "date": 1728727433750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n                 <Image \n                   src={article.image} \n                   alt={article.title} \n                   width={600}  // Largeur fixe ou dynamique selon ton besoin\n-                  height={400} // Hauteur fixe ou dynamique\n+                  height={400} \n                   className=\"mt-2 mb-4 rounded-lg\"\n                   loading=\"lazy\"  // Chargement différé\n                 />\n               )}\n"
                },
                {
                    "date": 1728727444233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,12 +43,12 @@\n               {article.image && (\n                 <Image \n                   src={article.image} \n                   alt={article.title} \n-                  width={600}  // Largeur fixe ou dynamique selon ton besoin\n+                  width={600} \n                   height={400} \n                   className=\"mt-2 mb-4 rounded-lg\"\n-                  loading=\"lazy\"  // Chargement différé\n+                  loading=\"lazy\"  \n                 />\n               )}\n \n               <a href={`/blog/${article.id}`} className=\"mt-2 inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700\">\n"
                },
                {
                    "date": 1728727535357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n \"use client\";\n import { useState, useEffect } from \"react\";\n import { Article } from \"../types\";\n+import Image from 'next/image'; \n \n export default function BlogPage() {\n   const [articles, setArticles] = useState<Article[]>([]);\n   const [error, setError] = useState<string | null>(null);  // Pour afficher une erreur si besoin\n"
                },
                {
                    "date": 1728729212455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n \n           return (\n             <div key={article.id} className=\"mb-4 p-4 border border-gray-300 rounded-lg\">\n               <h2 className=\"text-xl font-bold\">Titre: {article.title}</h2>\n-              <p className=\"text-sm text-gray-500\">Publié le: {articleDate.toLocaleDateString()}</p>\n+            \n \n               {/* Utilisation du composant Image pour optimiser l'image */}\n               {article.image && (\n                 <Image \n"
                },
                {
                    "date": 1728729244440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,15 +32,14 @@\n       {articles.length === 0 && !error ? (\n         <p>Aucun article disponible.</p>\n       ) : (\n         articles.map((article) => {\n-          const articleDate = typeof article.createdAt === 'string' ? new Date(article.createdAt) : article.createdAt;\n \n           return (\n             <div key={article.id} className=\"mb-4 p-4 border border-gray-300 rounded-lg\">\n               <h2 className=\"text-xl font-bold\">Titre: {article.title}</h2>\n-            \n \n+\n               {/* Utilisation du composant Image pour optimiser l'image */}\n               {article.image && (\n                 <Image \n                   src={article.image} \n"
                },
                {
                    "date": 1728729286383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,8 @@\n           return (\n             <div key={article.id} className=\"mb-4 p-4 border border-gray-300 rounded-lg\">\n               <h2 className=\"text-xl font-bold\">Titre: {article.title}</h2>\n \n-\n               {/* Utilisation du composant Image pour optimiser l'image */}\n               {article.image && (\n                 <Image \n                   src={article.image} \n"
                }
            ],
            "date": 1728655223487,
            "name": "Commit-0",
            "content": "\"use client\"; \n\nimport { useState, useEffect } from \"react\";\nimport { Article } from \"../types\";\n\n\nexport default function BlogPage() {\n    const [articles, setArticles] = useState<Article[]>([]); \n\n\n    const fetchArticles = async () => {\n        try {\n            const response = await fetch('http://127.0.0.1:3000/api/blog');\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            const data = await response.json();\n            console.log( data); \n            setArticles(data);\n        } catch (error) {\n            console.error('Erreur lors de la récupération des articles:', error);\n        }\n    };\n    \n    \n    useEffect(() => {\n        fetchArticles();\n    }, [])\n\n\n    return (\n        <>\n            <h1>Liste des articles</h1>\n            {/* Affichez la liste des articles */}\n            {articles.map((article) => (\n                <div key={article.id} style={{ padding: '1rem' }}>\n                    <h2>{article.title} </h2>\n                </div>\n            ))}\n        </>\n    );\n}\n"
        }
    ]
}